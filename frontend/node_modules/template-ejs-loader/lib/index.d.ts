import { Data, Options } from 'ejs';
import { LoaderContext } from 'webpack';
import type { AdditionalData, SourceMap } from './types';
declare type EjsLoaderContext = LoaderContext<Options & {
    data?: Data | string;
}>;
export declare type htmlWebpackPluginTemplateCustomizerConfig = {
    htmlLoaderOption?: {
        [key: string]: any;
    };
    templateEjsLoaderOption?: Options & {
        data?: Data | string;
    };
    templatePath?: string;
};
export declare function htmlWebpackPluginTemplateCustomizer(config: htmlWebpackPluginTemplateCustomizerConfig): string;
export default function ejsLoader(this: EjsLoaderContext, content: string, sourceMap: string | SourceMap, additionalData: AdditionalData): Promise<void>;
export type { SourceMap, AdditionalData };
